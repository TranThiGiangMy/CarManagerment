# Generated by Django 4.0.4 on 2022-05-21 12:46

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=50)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('contact', models.CharField(blank=True, max_length=10)),
                ('image', models.ImageField(default=None, upload_to='img_avatar/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('up_date', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='starting-point')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ending_point', models.CharField(max_length=100)),
                ('distance', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('note', models.TextField(max_length=50, null=True)),
                ('starting_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.category')),
            ],
            options={
                'ordering': ['starting_point'],
                'unique_together': {('starting_point', 'ending_point')},
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=58, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_date', models.DateTimeField()),
                ('ending_date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('note', models.TextField(max_length=50, null=True)),
                ('empty_seat', models.BooleanField(default=True)),
                ('content', models.TextField(default=True, max_length=50)),
                ('router', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trains', to='booking.routes')),
                ('tags', models.ManyToManyField(blank=True, related_name='tags_trains', to='booking.tag')),
                ('user_train', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_trains', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('starting_date', 'ending_date')},
            },
        ),
        migrations.CreateModel(
            name='TicKet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('up_date', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=0, max_digits=8, verbose_name='price')),
                ('point', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='point_ticket', to='booking.routes')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('up_date', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('train', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='booking.train')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(null=True, verbose_name='number-ticket')),
                ('note', models.TextField(max_length=50, null=True)),
                ('created_date_book', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('pay', models.CharField(choices=[('CA', 'Cash'), ('MM', 'Banking MoMo'), ('ZP', 'Zalo Pay')], default='CA', max_length=2)),
                ('date', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='date_booking', to='booking.train')),
                ('ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_booking', to='booking.ticket')),
                ('user_book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_booking', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='booking.usertype'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('up_date', models.DateTimeField(auto_now=True)),
                ('rate', models.PositiveSmallIntegerField(default=0)),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.train')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'train')},
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('up_date', models.DateTimeField(auto_now=True)),
                ('type', models.PositiveSmallIntegerField(choices=[('LIKE', 'like'), ('HAHA', 'haha'), ('HEART', 'heart')], default='LIKE')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.train')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'train')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('name', 'contact')},
        ),
    ]
